// Place your key bindings in this file to override the defaults
[
    {
        "key": "cmd+k h",
        "command": "workbench.action.showEditorsInActiveGroup"
    },
    {
        "key": "ctrl+alt+s",
        "command": "workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "cmd+k s",
        "command": "-workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "cmd+k s",
        "command": "outline.focus"
    },
    {
        "key": "right",
        "command": "editor.action.inlineSuggest.commit",
        "when": "inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "tab",
        "command": "-editor.action.inlineSuggest.commit",
        "when": "inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+s i",
        "command": "inlineChat.start",
        "when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
    },
    {
        "key": "cmd+i",
        "command": "-inlineChat.start",
        "when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
    },
    {
        "key": "ctrl+s left",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "ctrl+s right",
        "command": "workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "ctrl+s up",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    {
        "key": "ctrl+s r",
        "command": "git.revertSelectedRanges",
        "when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'"
    },
    {
        "key": "cmd+k cmd+r",
        "command": "-git.revertSelectedRanges",
        "when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'"
    },
    {
        "key": "ctrl+s \\",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "cmd+k cmd+\\",
        "command": "-workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+s shift+s",
        "command": "extension.vim_ctrl+s",
        "when": "editorTextFocus && vim.active && vim.use<C-s> && !inDebugRepl"
    },
    {
        "key": "ctrl+s",
        "command": "-extension.vim_ctrl+s",
        "when": "editorTextFocus && vim.active && vim.use<C-s> && !inDebugRepl"
    },
    {
        "key": "ctrl+s s",
        "command": "cSpell.suggestSpellingCorrections"
    },
    {
        "key": "ctrl+s b",
        "command": "markdown.extension.editing.toggleBold",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    {
        "key": "cmd+b",
        "command": "-markdown.extension.editing.toggleBold",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    }
]